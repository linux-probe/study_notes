调用resched_curr
	set_tsk_need_resched
		set_tsk_thread_flag(tsk,TIF_NEED_RESCHED);
		
调用resched_curr函数
resched_cpu in core.c (kernel\sched)

check_preempt_curr in core.c (kernel\sched)
	__migrate_swap_task in core.c (kernel\sched)
	ttwu_do_wakeup in core.c (kernel\sched)
	ttwu_remote in core.c (kernel\sched)
	wake_up_new_task in core.c (kernel\sched) 
	move_queued_task in core.c (kernel\sched) 
	attach_task in fair.c (kernel\sched)
	prio_changed_fair in fair.c (kernel\sched)
	switched_to_fair in fair.c (kernel\sched) 


set_user_nice in core.c (kernel\sched)
yield_to in core.c (kernel\sched)
normalize_task in core.c (kernel\sched)

check_preempt_tick in fair.c (kernel\sched) 
	entity_tick
		task_tick_fair
			scheduler_tick
			hrtick
entity_tick in fair.c (kernel\sched)
		task_tick_fair
			scheduler_tick
			hrtick

__account_cfs_rq_runtime in fair.c (kernel\sched)
	account_cfs_rq_runtime
		update_curr
			update_curr_fair in fair.c (kernel\sched) : 	update_curr(cfs_rq_of(&rq->curr->se));
			reweight_entity in fair.c (kernel\sched) : 			update_curr(cfs_rq);
			enqueue_entity in fair.c (kernel\sched) : 	 * through calling update_curr().
			put_prev_entity in fair.c (kernel\sched) : 		update_curr(cfs_rq);
			entity_tick in fair.c (kernel\sched) : 	update_curr(cfs_rq);
			check_enqueue_throttle in fair.c (kernel\sched) : 	/* an active group must be handled by the update_curr()->put() path */
			check_preempt_wakeup in fair.c (kernel\sched) : 	 * group (e.g. via set_curr_task), since update_curr() (in the
			check_preempt_wakeup in fair.c (kernel\sched) : 	update_curr(cfs_rq_of(se));
			pick_next_task_fair in fair.c (kernel\sched) : 		 * entity, update_curr() will update its vruntime, otherwise
			pick_next_task_fair in fair.c (kernel\sched) : 			update_curr(cfs_rq);
			yield_task_fair in fair.c (kernel\sched) : 		update_curr(cfs_rq);
			task_fork_fair in fair.c (kernel\sched) : 	update_curr(cfs_rq);
			sched_group_set_shares in fair.c (kernel\sched) : 		/* Possible calls to update_curr() need rq clock */
			fair.c (kernel\sched) line 8155 : 	.update_curr		= update_curr_fair,
				task_sched_runtime
		set_curr_task_fair

unthrottle_cfs_rq in fair.c (kernel\sched)
hrtick_start_fair in fair.c (kernel\sched)
check_preempt_wakeup in fair.c (kernel\sched)
	rq->curr->sched_class->check_preempt_curr
		check_preempt_curr
task_fork_fair in fair.c (kernel\sched) 
	task_fork
		sched_fork
			copy_process
prio_changed_fair in fair.c (kernel\sched)
switched_to_fair in fair.c (kernel\sched)
	check_class_changed
		
check_preempt_curr_idle in idle_task.c (kernel\sched)
